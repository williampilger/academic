/**
 * Authenty AE - Bom Princípio-RS  |  github.com/authentyAE
 * by: will.i.am                   |  github.com/williampilger
 *
 * 2022 - Bom Princípio - RS
 */
@import './config/theme.scss';

body, html {
  // border: 1px solid red;

  background-color: $backgroundColor;
  margin: 0;
  font-family: $defaultFontStach;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  min-width: $minSize;

  .mainloading{
    display: none;
  }
}

*{
  box-sizing: border-box;
  font-family: $defaultFontStach;
}

code {
  font-family: $defaultFontStach;
}

.App{
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: space-between;

  .initial-loading{
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
  }

  main{
    height: fit-content;
  }

  .sandboxwarn_div{
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 11;
    background-color: orange;
    height: 3px;
  }
  .sandboxwarn_span{
    position: fixed;
    z-index: 11;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    font-size: 12px;
    padding: 2px 7px 5px 7px;
    border-radius: 0 0 5px 5px;
    background-color: orange;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    span{
      color: white;
      font-weight: bold;
    }
    p{
      text-align: justify;
      width: 0;
      height: 0;
      margin: 0;
      transition: all ease .2s;
      overflow: hidden;
    }
    &:hover p{
      width: 200px;
      height: 100px;
      margin: 10px;
    }
  }
}

.bold {
  font-weight: bold;
}

h1, .h1{
  color: $textBackgroundColor;
  font-size: $fontT;
  margin: 0;
  &.as{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontT * $proporcaoReducao);
    }
  }
  &.asl{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontT * $proporcaoReducaoLight);
    }
  }
}

h2, .h2{
  color: $textBackgroundColor;
  font-size: $fontGG;
  margin: 0;
  &.as{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontGG * $proporcaoReducao);
    }
  }
  &.asl{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontGG * $proporcaoReducaoLight);
    }
  }
}

h3, .h3{
  color: $textBackgroundColor;
  font-size: $fontG;
  margin: 0;
  &.as{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontG * $proporcaoReducao);
    }
  }
  &.asl{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontG * $proporcaoReducaoLight);
    }
  }
}

h4, .h4{
  color: $textBackgroundColor;
  font-size: $fontMM;
  margin: 0;
  &.as{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontMM * $proporcaoReducao);
    }
  }
  &.asl{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontMM * $proporcaoReducaoLight);
    }
  }
}

a, .a{
  color: $linkColor;
  text-decoration: none;
  &:hover{
    cursor: pointer;
    text-decoration: underline;
  }
}

span.pp, .spanpp {
  font-size: $fontPP;
  &.as{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontPP * $proporcaoReducao);
    }
  }
  &.asl{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontPP * $proporcaoReducaoLight);
    }
  }
}
span.p, .spanp {
  font-size: $fontP;
  &.as{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontP * $proporcaoReducao);
    }
  }
  &.asl{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontP * $proporcaoReducaoLight);
    }
  }
}
span.m, .spanm {
  font-size: $fontM;
  &.as{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontM * $proporcaoReducao);
    }
  }
  &.asl{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontM * $proporcaoReducaoLight);
    }
  }
}
span.mm, .spanmm {
  font-size: $fontMM;
  &.as{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontMM * $proporcaoReducao);
    }
  }
  &.asl{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontMM * $proporcaoReducaoLight);
    }
  }
}
span.g, .spang {
  font-size: $fontG;
  &.as{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontG * $proporcaoReducao);
    }
  }
  &.asl{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontG * $proporcaoReducaoLight);
    }
  }
}
span.gm, .spangm {
  font-size: $fontGM;
  &.as{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontGM * $proporcaoReducao);
    }
  }
  &.asl{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontGM * $proporcaoReducaoLight);
    }
  }
}
span.gg, .spangg {
  font-size: $fontGG;
  &.as{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontGG * $proporcaoReducao);
    }
  }
  &.asl{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontGG * $proporcaoReducaoLight);
    }
  }
}
span.tp, .spantp {
  font-size: $fontTP;
  &.as{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontTP * $proporcaoReducao);
    }
  }
  &.asl{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontTP * $proporcaoReducaoLight);
    }
  }
}
span.t, .spant {
  font-size: $fontT;
  &.as{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontT * $proporcaoReducao);
    }
  }
  &.asl{
    transition: all ease .2s;
    @media (max-width: $minSize1){
      font-size: calc($fontT * $proporcaoReducaoLight);
    }
  }
}